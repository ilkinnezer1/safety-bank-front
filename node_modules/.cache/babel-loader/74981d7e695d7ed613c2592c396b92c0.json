{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/WebstormProjects/untitled9/src/Components/Pages/Resgistration/SignUp.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formProvider = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passError: \"\"\n};\nexport class SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = formProvider;\n\n    this.handleChange = validate = () => {\n      let nameError = '';\n      let emailError = \"\";\n      let passError = \"\";\n\n      if (!this.state.name) {\n        nameError = \"It can't be left it blank!\";\n      }\n\n      if (this.state.email.includes(\"@\")) {\n        emailError = \"Invalid address\";\n      }\n\n      if (this.state.password.length <= 8) {\n        passError = \"Password must contain at least 8 elements\";\n      }\n\n      if (nameError || emailError || passError) {\n        this.setState({\n          nameError,\n          emailError,\n          passError\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.validate();\n      this.setState(formProvider);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header-text\",\n          children: \"Follow your interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Instant updates from our company experts, favorite celebrities, and what's happening around the world.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-elements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New to SAFETY BANK? Join today!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          autoComplete: \"off\",\n          placeholder: \"Full name\",\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          autoComplete: \"off\",\n          placeholder: \"Email\",\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/yusifnezerov/WebstormProjects/untitled9/src/Components/Pages/Resgistration/SignUp.js"],"names":["React","formProvider","name","email","password","nameError","emailError","passError","SignUp","Component","state","handleChange","validate","includes","length","setState","handleSubmit","event","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,KAAK,EAAC,EAFW;AAGjBC,EAAAA,QAAQ,EAAC,EAHQ;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,UAAU,EAAC,EALM;AAMjBC,EAAAA,SAAS,EAAC;AANO,CAArB;AAQA,OAAO,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAoC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/BT,YAD+B;;AAAA,SAIvCU,YAJuC,GAevCC,QAAQ,GAAG,MAAM;AACb,UAAIP,SAAS,GAAG,EAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AAGA,UAAG,CAAC,KAAKG,KAAL,CAAWR,IAAf,EAAoB;AAChBG,QAAAA,SAAS,GAAG,4BAAZ;AACH;;AACD,UAAG,KAAKK,KAAL,CAAWP,KAAX,CAAiBU,QAAjB,CAA0B,GAA1B,CAAH,EAAkC;AAC9BP,QAAAA,UAAU,GAAG,iBAAb;AACH;;AACD,UAAG,KAAKI,KAAL,CAAWN,QAAX,CAAoBU,MAApB,IAA8B,CAAjC,EAAmC;AAC/BP,QAAAA,SAAS,GAAG,2CAAZ;AACH;;AACD,UAAGF,SAAS,IAAIC,UAAb,IAA2BC,SAA9B,EAAwC;AACpC,aAAKQ,QAAL,CAAc;AAACV,UAAAA,SAAD;AAAYC,UAAAA,UAAZ;AAAwBC,UAAAA;AAAxB,SAAd;AACH;AAEJ,KAlCsC;;AAAA,SAsCvCS,YAtCuC,GAsCxBC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKN,QAAL;AACA,WAAKG,QAAL,CAAcd,YAAd;AACH,KA1CsC;AAAA;;AAoEvCkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMK;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,YAAY,EAAC,KAA5C;AAAkD,UAAA,WAAW,EAAC,WAA9D;AAA0E,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWR;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFP,eAGQ;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,YAAY,EAAC,KAA9C;AAAoD,UAAA,WAAW,EAAC,OAAhE;AAAwE,UAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWP;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAHR,eAIO;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAJP,eAKO;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA,cANL;AAAA,oBADJ;AAgBH;;AArFsC","sourcesContent":["import React from 'react'\n\nconst formProvider = {\n    name:\"\",\n    email:\"\",\n    password:\"\",\n    nameError:\"\",\n    emailError:\"\",\n    passError:\"\"\n}\nexport class SignUp extends React.Component{\n    state = formProvider\n\n\n    handleChange = \n\n\n\n\n\n\n\n\n\n\n    validate = () => {\n        let nameError = ''\n        let emailError = \"\"\n        let passError = \"\"\n\n\n        if(!this.state.name){\n            nameError = \"It can't be left it blank!\"\n        }\n        if(this.state.email.includes(\"@\")){\n            emailError = \"Invalid address\"\n        }\n        if(this.state.password.length <= 8){\n            passError = \"Password must contain at least 8 elements\"\n        }\n        if(nameError || emailError || passError){\n            this.setState({nameError, emailError, passError})\n        }\n\n    }\n\n// Handle Submit function that makes form elements active\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.validate()\n        this.setState(formProvider)\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    render() {\n        return(\n            <>\n                <div className='text-container'>\n                    <h1 className='header-text'>Follow your interest</h1>\n                    <p>Instant updates from our company experts, favorite celebrities, and what's happening around the world.</p>\n                    <input type=\"search\"/>\n                </div>\n                 <form className='form-elements'>\n                         <h3>New to SAFETY BANK? Join today!</h3>\n                        <input type=\"text\" name=\"name\" autoComplete='off' placeholder=\"Full name\" value={this.state.name}/>\n                         <input type=\"email\" name=\"email\" autoComplete='off' placeholder=\"Email\" value={this.state.email}/>\n                        <input type='password' name='password' placeholder=\"Password\"/>\n                        <button type='button'>Sign Up</button>\n                 </form>\n            </>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}